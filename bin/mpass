#!/bin/bash

TMP_IN=$(mktemp /tmp/mpass.XXXXXXXXXX)
TMP_OUT=$(mktemp /tmp/mpass.XXXXXXXXXX)

function cleanup
{
	rm "$TMP_IN" 2>&1 > /dev/null
	rm "$TMP_OUT" 2>&1 > /dev/null
}

function getpass
{
	echo -n $(cat ~/.mpassword)
}

function tryerr
{
	C="$?"
	if [ "$C" != "0" ]; then
		merror "An error occurred." "$C"
		cleanup
		exit 1
	fi

	C="$1"
	if [ "$C" != "" ]; then
		if [ "$C" != "0" ]; then
			merror "An error occurred." "$C"
			cleanup
			exit 1
		fi
	fi
}

# Create password: mpass create <name> [chars]
if [ "$1" = "create" ]; then
	if [ "$2" = "" ]; then
		echo "Usage: mpass create <name> [chars]"
		cleanup
		exit 1
	fi

	if [ "$3" = "" ]; then
		nchars="32"
	else
		nchars="$3"
	fi

	chars=$(LC_ALL=C tr -dc A-Za-z0-9_ < /dev/urandom | head -c "$nchars")

	echo "$chars" > "$TMP_IN"
	echo "$chars" | mclip

	getpass | openssl enc -aes-256-cbc -a -in "$TMP_IN" -out "$TMP_OUT" -pass stdin
	tryerr

	enc=$(cat "$TMP_OUT")

	passsum=$(getpass | mshasum | cut -d ' ' -f 1)

	code=$(curl -k -s -X POST -d "$enc" "https://pass.mort.coffee/put/$2/$passsum")
	tryerr "$code"

	echo -n "$chars" | mclip

	mnotify "Password created" "$2"

# Get password: mpass get <name>
elif [ "$1" = "get" ]; then
	if [ "$2" = "" ]; then
		echo "Usage: mpass get <name>"
		cleanup
		exit 1
	fi

	curl -k -s "https://pass.mort.coffee/get/$2" > "$TMP_IN"
	tryerr
	if [ ! -s "$TMP_IN" ]; then
		tryerr "Pasword doesn't exist."
	fi
	echo "" >> "$TMP_IN"

	getpass | openssl enc -aes-256-cbc -a -d -in "$TMP_IN" -out "$TMP_OUT" -pass stdin
	tryerr

	chars=$(cat "$TMP_OUT")
	mnotify "Password received" "$2"

	# Type the password if the user wants that
	if [ "$3" = "type" ]; then
		sleep 1
		xdotool type "$chars"

	# Just put it in the clipboard if the user doesn't want it typed
	else
		echo -n "$chars" | mclip
	fi
fi

cleanup
